0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.3
3 info using node@v0.10.26
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/paolofragomeni/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz
12 verbose folder .
13 info prepublish level-replicator@0.2.0
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/paolofragomeni/.npm/1f1177db-tar.lock
16 silly lockFile e20f13f2-5351-0-23048911476507783-tmp-tgz tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz
17 verbose lock tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz /Users/paolofragomeni/.npm/e20f13f2-5351-0-23048911476507783-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile e20f13f2-5351-0-23048911476507783-tmp-tgz tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz
21 silly lockFile e20f13f2-5351-0-23048911476507783-tmp-tgz tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz
22 verbose tar unpack /var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz
23 silly lockFile ccaae185-5351-0-23048911476507783-package tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package
24 verbose lock tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package /Users/paolofragomeni/.npm/ccaae185-5351-0-23048911476507783-package.lock
25 silly lockFile e20f13f2-5351-0-23048911476507783-tmp-tgz tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz
26 verbose lock tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz /Users/paolofragomeni/.npm/e20f13f2-5351-0-23048911476507783-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry .npmignore
30 silly gunzTarPerm extractEntry README.md
31 silly gunzTarPerm extractEntry replicate.js
32 silly gunzTarPerm extractEntry index.js
33 silly gunzTarPerm extractEntry faraway.png
34 silly gunzTarPerm extractEntry closeup.png
35 silly gunzTarPerm extractEntry bin/server.js
36 silly gunzTarPerm extractEntry replicator.png
37 silly gunzTarPerm extractEntry test/test.js
38 silly lockFile ccaae185-5351-0-23048911476507783-package tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package
39 silly lockFile ccaae185-5351-0-23048911476507783-package tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package
40 silly lockFile e20f13f2-5351-0-23048911476507783-tmp-tgz tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz
41 silly lockFile e20f13f2-5351-0-23048911476507783-tmp-tgz tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/tmp.tgz
42 verbose tar pack [ '/Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz',
42 verbose tar pack   '/var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package' ]
43 verbose tarball /Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz
44 verbose folder /var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package
45 silly lockFile ccaae185-5351-0-23048911476507783-package tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package
46 verbose lock tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package /Users/paolofragomeni/.npm/ccaae185-5351-0-23048911476507783-package.lock
47 silly lockFile b635c9e8-vel-replicator-0-2-0-package-tgz tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz
48 verbose lock tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz /Users/paolofragomeni/.npm/b635c9e8-vel-replicator-0-2-0-package-tgz.lock
49 silly lockFile ccaae185-5351-0-23048911476507783-package tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package
50 silly lockFile ccaae185-5351-0-23048911476507783-package tar:///var/folders/yg/x4kqg5x97gn75k0sjq_799b00000gn/T/npm-45248-PmBmSswl/1399227865351-0.23048911476507783/package
51 silly lockFile b635c9e8-vel-replicator-0-2-0-package-tgz tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz
52 silly lockFile b635c9e8-vel-replicator-0-2-0-package-tgz tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz
53 silly lockFile 938dda11-m-level-replicator-0-2-0-package /Users/paolofragomeni/.npm/level-replicator/0.2.0/package
54 verbose lock /Users/paolofragomeni/.npm/level-replicator/0.2.0/package /Users/paolofragomeni/.npm/938dda11-m-level-replicator-0-2-0-package.lock
55 silly lockFile 938dda11-m-level-replicator-0-2-0-package /Users/paolofragomeni/.npm/level-replicator/0.2.0/package
56 silly lockFile 938dda11-m-level-replicator-0-2-0-package /Users/paolofragomeni/.npm/level-replicator/0.2.0/package
57 verbose tar unpack /Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz
58 silly lockFile c4fcbf12-m-level-replicator-0-2-0-package tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package
59 verbose lock tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package /Users/paolofragomeni/.npm/c4fcbf12-m-level-replicator-0-2-0-package.lock
60 silly lockFile b635c9e8-vel-replicator-0-2-0-package-tgz tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz
61 verbose lock tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz /Users/paolofragomeni/.npm/b635c9e8-vel-replicator-0-2-0-package-tgz.lock
62 silly gunzTarPerm modes [ '755', '644' ]
63 silly gunzTarPerm extractEntry package.json
64 silly gunzTarPerm extractEntry .npmignore
65 silly gunzTarPerm extractEntry README.md
66 silly gunzTarPerm extractEntry index.js
67 silly gunzTarPerm extractEntry replicate.js
68 silly gunzTarPerm extractEntry bin/server.js
69 silly gunzTarPerm extractEntry closeup.png
70 silly gunzTarPerm extractEntry faraway.png
71 silly gunzTarPerm extractEntry replicator.png
72 silly gunzTarPerm extractEntry test/test.js
73 silly lockFile c4fcbf12-m-level-replicator-0-2-0-package tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package
74 silly lockFile c4fcbf12-m-level-replicator-0-2-0-package tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package
75 silly lockFile b635c9e8-vel-replicator-0-2-0-package-tgz tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz
76 silly lockFile b635c9e8-vel-replicator-0-2-0-package-tgz tar:///Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz
77 verbose chmod /Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz 644
78 verbose chown /Users/paolofragomeni/.npm/level-replicator/0.2.0/package.tgz [ 501, 20 ]
79 silly lockFile 3a52ce78- .
80 silly lockFile 3a52ce78- .
81 silly publish { name: 'level-replicator',
81 silly publish   version: '0.2.0',
81 silly publish   description: 'leveldb strong and eventual master-master replication',
81 silly publish   main: 'index.js',
81 silly publish   bin: { 'level-replicator': './bin/server.js' },
81 silly publish   scripts: { test: 'mocha --recursive test --bail --colors --reporter spec --debug --timeout 8000' },
81 silly publish   keywords: [ 'eventual', 'strong', 'replication' ],
81 silly publish   author: { name: 'hij1nx' },
81 silly publish   license: 'MIT',
81 silly publish   dependencies:
81 silly publish    { level: '0.18.0',
81 silly publish      multilevel: '~5.5.0',
81 silly publish      'level-hooks': '~4.4.3',
81 silly publish      'monotonic-timestamp': '0.0.8',
81 silly publish      'secure-peer': '~0.2.1' },
81 silly publish   devDependencies: { rimraf: '~2.2.2', selfsigned: '~1.2.0', mocha: '~1.17.1' },
81 silly publish   readme: '\n![img](/replicator.png)\n\n# SYNOPSIS\nA simple eventually consistent master-master replication module \nfor leveldb.\n\n# BUILD STATUS\n[![build-status](https://www.codeship.io/projects/0d604520-6cc1-0131-203c-22ccfa4c21c9/status)](https://www.codeship.io/projects/13128)\n\n## METHOD\n### Change Logs\nEach database maintains a `CHANGE LOG` in a separate level instance. \nEach entry in the change log has a key that is a monotonic timestamp\nand a value that was the operation, for example...\n\n```\n{ \n  "key": "1391172544446.001",\n  "value": { "type": "put", "value": "some-random-key-name" }\n}\n```\n\n![img](/closeup.png)\n\nA replicating database will query a remote database\'s change log in reverse \nuntil it finds either a matching key in its own change log or the first key \nin the remote server\'s change log.\n\n![img](/faraway.png)\n\n### Optimizations\nKeeping a changes log and applying the changes in reverse means the latest\nchanges will be applied to the appropriate key values. If there is more than\none operation against a key,\n\n  1. the change entry is removed by the server (*Not yet implemented*) or\n  2. it is ignored by the client.\n\nThe changes log can be truncated over time to save disk space.\n\n## EXAMPLE: MORE THAN TWO SERVERS\n\n### Server 1\n```js\nvar level = require(\'level\')\nvar lrep = require(\'level-replicator\')\n\nvar config = {\n  servers: { // list of servers to replicate with\n    "127.0.0.1:8001": {}, // a serer id and its meta data\n    "127.0.0.1:8002": {} // a serer id and its meta data\n  },\n  port: 8000 // port for this server\n}\n\nvar db = level(\'/tmp/db\') // create a datbase to replicate\nvar cl = level(\'/tmp/cl\') // create a change log database\n\nlrep.install(db, cl, config)\n\n// put something into the database\ndb.put(\'some-key\', \'some-value\', function(err) {\n})\n```\n\n### Server 2\n\n```js\nvar level = require(\'level\')\nvar lrep = require(\'level-replicator\')\n\nvar config = {\n  servers: {\n    "127.0.0.1:8000": {},\n    "127.0.0.1:8002": {}\n  },\n  port: 8001\n}\n\nvar db = level(\'/tmp/db\')\nvar cl = level(\'/tmp/cl\')\n\nlrep.install(db, cl, config)\n\ndb.put(\'some-key\', \'some-value\', function(err) {\n})\n```\n\n### Server 3...\n\n```js\nvar level = require(\'level\')\nvar lrep = require(\'level-replicator\')\n\nvar config = {\n  servers: { \n    "127.0.0.1:8000": {},\n    "127.0.0.1:8001": {} \n  },\n  port: 8002\n}\n\nvar db = level(\'/tmp/db\')\nvar cl = level(\'/tmp/cl\')\n\nlrep.install(db, cl, config)\n\ndb.put(\'some-key\', \'some-value\', function(err) {\n})\n```\n\n\n## EXAMPLE: SECURE PEERS\nSecure peers require a key pair; if you want to be fancy you could use \n[`this`][0] or [`this`][1] to crete a JSON file that includes the generated \n\n```js\n\nvar config = {\n  servers: {\n    "127.0.0.1:8001": {} \n  },\n  port: 8000,\n  pems: __dirname + \'/pems.json\'\n}\n\nconfig.identify = function (id) {\n\n  //\n  // you can asynchronously verify that the key matches the known value here\n  //\n  id.accept()\n}\n```\n\n[0]:https://github.com/hij1nx/selfsigned\n[1]:https://github.com/substack/rsa-json\n',
81 silly publish   readmeFilename: 'README.md',
81 silly publish   _id: 'level-replicator@0.2.0',
81 silly publish   dist: { shasum: '6667c7e44386ed8a82650c92155d0b2c221f3488' },
81 silly publish   _from: '.' }
82 verbose url raw level-replicator
83 verbose url resolving [ 'https://registry.npmjs.org/', './level-replicator' ]
84 verbose url resolved https://registry.npmjs.org/level-replicator
85 info trying registry request attempt 1 at 14:24:25
86 http PUT https://registry.npmjs.org/level-replicator
87 http 403 https://registry.npmjs.org/level-replicator
88 error publish Failed PUT 403
89 error Error: forbidden cannot modify pre-existing version: 0.2.0
89 error old={"name":"level-replicator","version":"0.2.0","description":"leveldb strong and eventual master-master replication","main":"index.js","bin":{"level-replicator":"./bin/server.js"},"scripts":{"test":"mocha --recursive test --bail --colors --reporter spec --debug --timeout 8000"},"keywords":["eventual","strong","replication"],"author":{"name":"hij1nx"},"license":"MIT","dependencies":{"level":"~0.12.0","multilevel":"~5.5.0","level-hooks":"~4.4.3","monotonic-timestamp":"0.0.8","secure-peer":"~0.2.1"},"devDependencies":{"rimraf":"~2.2.2","selfsigned":"~1.2.0","mocha":"~1.17.1"},"_id":"level-replicator@0.2.0","dist":{"shasum":"66a5b0518651019f7e9f90b92ba8b832a37535c5","tarball":"http://registry.npmjs.org/level-replicator/-/level-replicator-0.2.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"hij1nx","email":"paolo@async.ly"},"maintainers":[{"name":"hij1nx","email":"paolo@async.ly"}]}
89 error new={"name":"level-replicator","version":"0.2.0","description":"leveldb strong and eventual master-master replication","main":"index.js","bin":{"level-replicator":"./bin/server.js"},"scripts":{"test":"mocha --recursive test --bail --colors --reporter spec --debug --timeout 8000"},"keywords":["eventual","strong","replication"],"author":{"name":"hij1nx"},"license":"MIT","dependencies":{"level":"0.18.0","multilevel":"~5.5.0","level-hooks":"~4.4.3","monotonic-timestamp":"0.0.8","secure-peer":"~0.2.1"},"devDependencies":{"rimraf":"~2.2.2","selfsigned":"~1.2.0","mocha":"~1.17.1"},"readme":"\u000a![img](/replicator.png)\u000a\u000a# SYNOPSIS\u000aA simple eventually consistent master-master replication module \u000afor leveldb.\u000a\u000a# BUILD STATUS\u000a[![build-status](https://www.codeship.io/projects/0d604520-6cc1-0131-203c-22ccfa4c21c9/status)](https://www.codeship.io/projects/13128)\u000a\u000a## METHOD\u000a### Change Logs\u000aEach database maintains a `CHANGE LOG` in a separate level instance. \u000aEach entry in the change log has a key that is a monotonic timestamp\u000aand a value that was the operation, for example...\u000a\u000a```\u000a{ \u000a  \"key\": \"1391172544446.001\",\u000a  \"value\": { \"type\": \"put\", \"value\": \"some-random-key-name\" }\u000a}\u000a```\u000a\u000a![img](/closeup.png)\u000a\u000aA replicating database will query a remote database's change log in reverse \u000auntil it finds either a matching key in its own change log or the first key \u000ain the remote server's change log.\u000a\u000a![img](/faraway.png)\u000a\u000a### Optimizations\u000aKeeping a changes log and applying the changes in reverse means the latest\u000achanges will be applied to the appropriate key values. If there is more than\u000aone operation against a key,\u000a\u000a  1. the change entry is removed by the server (*Not yet implemented*) or\u000a  2. it is ignored by the client.\u000a\u000aThe changes log can be truncated over time to save disk space.\u000a\u000a## EXAMPLE: MORE THAN TWO SERVERS\u000a\u000a### Server 1\u000a```js\u000avar level = require('level')\u000avar lrep = require('level-replicator')\u000a\u000avar config = {\u000a  servers: { // list of servers to replicate with\u000a    \"127.0.0.1:8001\": {}, // a serer id and its meta data\u000a    \"127.0.0.1:8002\": {} // a serer id and its meta data\u000a  },\u000a  port: 8000 // port for this server\u000a}\u000a\u000avar db = level('/tmp/db') // create a datbase to replicate\u000avar cl = level('/tmp/cl') // create a change log database\u000a\u000alrep.install(db, cl, config)\u000a\u000a// put something into the database\u000adb.put('some-key', 'some-value', function(err) {\u000a})\u000a```\u000a\u000a### Server 2\u000a\u000a```js\u000avar level = require('level')\u000avar lrep = require('level-replicator')\u000a\u000avar config = {\u000a  servers: {\u000a    \"127.0.0.1:8000\": {},\u000a    \"127.0.0.1:8002\": {}\u000a  },\u000a  port: 8001\u000a}\u000a\u000avar db = level('/tmp/db')\u000avar cl = level('/tmp/cl')\u000a\u000alrep.install(db, cl, config)\u000a\u000adb.put('some-key', 'some-value', function(err) {\u000a})\u000a```\u000a\u000a### Server 3...\u000a\u000a```js\u000avar level = require('level')\u000avar lrep = require('level-replicator')\u000a\u000avar config = {\u000a  servers: { \u000a    \"127.0.0.1:8000\": {},\u000a    \"127.0.0.1:8001\": {} \u000a  },\u000a  port: 8002\u000a}\u000a\u000avar db = level('/tmp/db')\u000avar cl = level('/tmp/cl')\u000a\u000alrep.install(db, cl, config)\u000a\u000adb.put('some-key', 'some-value', function(err) {\u000a})\u000a```\u000a\u000a\u000a## EXAMPLE: SECURE PEERS\u000aSecure peers require a key pair; if you want to be fancy you could use \u000a[`this`][0] or [`this`][1] to crete a JSON file that includes the generated \u000a\u000a```js\u000a\u000avar config = {\u000a  servers: {\u000a    \"127.0.0.1:8001\": {} \u000a  },\u000a  port: 8000,\u000a  pems: __dirname + '/pems.json'\u000a}\u000a\u000aconfig.identify = function (id) {\u000a\u000a  //\u000a  // you can asynchronously verify that the key matches the known value here\u000a  //\u000a  id.accept()\u000a}\u000a```\u000a\u000a[0]:https://github.com/hij1nx/selfsigned\u000a[1]:https://github.com/substack/rsa-json\u000a","readmeFilename":"README.md","_id":"level-replicator@0.2.0","dist":{"shasum":"6667c7e44386ed8a82650c92155d0b2c221f3488","tarball":"http://registry.npmjs.org/level-replicator/-/level-replicator-0.2.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"hij1nx","email":"paolo@async.ly"},"maintainers":[{"name":"hij1nx","email":"paolo@async.ly"}]}: level-replicator
89 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:237:14)
89 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:123:22)
89 error     at Request.EventEmitter.emit (events.js:98:17)
89 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:893:14)
89 error     at Request.EventEmitter.emit (events.js:117:20)
89 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:844:12)
89 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
89 error     at _stream_readable.js:920:16
89 error     at process._tickCallback (node.js:415:13)
90 error If you need help, you may report this *entire* log,
90 error including the npm and node versions, at:
90 error     <http://github.com/npm/npm/issues>
91 error System Darwin 13.1.0
92 error command "node" "/usr/local/bin/npm" "publish"
93 error cwd /Users/paolofragomeni/workroot/git/hij1nx/level-replicator
94 error node -v v0.10.26
95 error npm -v 1.4.3
96 verbose exit [ 1, true ]
